<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx">
			   
	<mx:Canvas id="videoContainer" creationComplete="onCreationComplete()" width="100%">
	</mx:Canvas>		
	<mx:ControlBar id="photoEditPropertiesContainer" borderStyle="solid" visible="false">
		<s:VGroup width="90%" top="2" bottom="2" left="5%" right="5%">
			<mx:Label id="photoTitleLabel" top="0" fontSize="14" fontWeight="bold" color="0x0666666" />
		
			<mx:TextArea id="photoTitleEdit" height="40" />
		</s:VGroup>
	</mx:ControlBar>
	<fx:Script>
            <![CDATA[
				import flash.text.Font;
				import flash.text.TextField;
				import flash.text.TextFormat;
				import mx.controls.Label;
				import mx.core.FlexGlobals;
				import mx.core.UIComponent;
				import flash.text.TextFieldType;
				import dVyper.Alert;
				
				private var cameraMain:CameraMain;
				
				private function onCreationComplete():void
				{
					var params:Object = FlexGlobals.topLevelApplication.parameters;
					Translator.init(params.langFileUrl, attachCameraStream);
				}
				
				//parse string to boolean http://www.actionscript.org/forums/showthread.php3?t=112370
				private function parseBoolean(s:String):Boolean
				{
					switch(s) {
						case "1":
						case "true":
						case "yes":
							return true;
						case "0":
						case "false":
						case "no":
							return false;
						default:
							return Boolean(s);
					}
				}
				
				private function showFatalError(error:String):void
				{
					var uiComponent:UIComponent = new UIComponent();
					uiComponent.width = videoContainer.width - videoContainer.borderMetrics.left - videoContainer.borderMetrics.right - 1;
					uiComponent.height = 300; 
					videoContainer.addChild( uiComponent );
					Alert.init(uiComponent);
					Alert.show( error );
				}
				
				private function attachCameraStream():void {
					var params:Object = FlexGlobals.topLevelApplication.parameters;
					
					//url must be set as parameter
					if ( params.url == undefined )
					{
						showFatalError("Developer error: url must be specified in params");
						return;
					}
					var cameraWidth:Number = params.width != undefined ? params.width : 600;
					var fontSize:Number = params.fontSize != undefined ? params.fontSize : 20;
					var cameraDelay:Number = params.delay != undefined ? params.delay : 10;
					var cameraDelayTicks:Number = params.ticks != undefined ? params.ticks : 3;
					var cameraFPS:Number = params.cameraFPS != undefined ? params.cameraFPS : 20;
					var afterUploadCallback:String = params.afterUploadCallback != undefined ? params.afterUploadCallback : null;
					var beforeUploadCallback:String = params.beforeUploadCallback != undefined ? params.beforeUploadCallback : null;
					var addPhotoTitle:Boolean = params.addPhotoTitle != undefined ? parseBoolean(params.addPhotoTitle) : true;
					var maxChars:Number = params.maxChars != undefined ? params.maxChars : 140;
					var minimalTitleLength:Number = params.minChars != undefined ? params.minChars : 2;
					var finishAfterUpload:Boolean = params.finishAfterUpload != undefined ? parseBoolean(params.finishAfterUpload) : true;
					var cameraStream:CameraStream = new CameraStream(cameraWidth, cameraFPS);
					//show message if camera doesnt exist on system
					if ( !cameraStream.isOk() )
					{
						showFatalError(Translator.__('cameraMissingError'));
						return;
					}
					
					videoContainer.width = cameraStream.getWidth();
					videoContainer.height = cameraStream.getHeight() ;
					
					if ( addPhotoTitle )
					{
						photoEditPropertiesContainer.setVisible(true);
						photoEditPropertiesContainer.width = cameraStream.getWidth();
						photoEditPropertiesContainer.top = videoContainer.height + 2;
						photoTitleLabel.width = photoTitleEdit.width = cameraStream.getWidth() - 20;
						photoTitleEdit.maxChars = maxChars;
						photoTitleLabel.text = Translator.__('photoTitleEditLabel');
					}
							
					cameraMain = new CameraMain( new UploadPhoto( params.url ), 
												cameraStream, videoContainer,
												afterUploadCallback,
												beforeUploadCallback,
												addPhotoTitle ? photoTitleEdit : null,
												minimalTitleLength,
												cameraDelayTicks, cameraDelay, finishAfterUpload, fontSize);
				}
				
            ]]>
    </fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
</s:Application>